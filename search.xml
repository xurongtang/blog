<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Gallery-1</title>
    <url>/2024/04/08/Gallery-1/</url>
    <content><![CDATA[<center>2024-03-23于长安大学彩虹桥</center>
<img src="/2024/04/08/Gallery-1/IMG_0504.jpg" class="">

<hr>
<center>2024-03-23于长安大学家属住宅区</center>
<img src="/2024/04/08/Gallery-1/IMG_0515.jpg" class="">

<hr>
<center>2024-01-13于大兴善寺</center>
<img src="/2024/04/08/Gallery-1/IMG_3455.jpg" class="">

<hr>
<center>2024-05-21于西安金沙国际</center>
<img src="/2024/04/08/Gallery-1/IMG_7442.jpg" class="">

<hr>
<center>2024-05-21于西安海港城</center>
<img src="/2024/04/08/Gallery-1/IMG_7444.jpg" class="">

<hr>
<center>2024-05-21于西安赛格</center>
<img src="/2024/04/08/Gallery-1/IMG_7445.jpg" class="">
]]></content>
      <categories>
        <category>Photos_Library</category>
      </categories>
      <tags>
        <tag>photos</tag>
      </tags>
  </entry>
  <entry>
    <title>Scientific style line chart drawing</title>
    <url>/2024/04/08/Line-chart-polt/</url>
    <content><![CDATA[<h1 id="科研风格折线图绘制"><a href="#科研风格折线图绘制" class="headerlink" title="科研风格折线图绘制"></a>科研风格折线图绘制</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.ticker <span class="keyword">import</span> AutoMinorLocator</span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.axes_grid1.inset_locator <span class="keyword">import</span> inset_axes,mark_inset</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimSun&#x27;</span>] <span class="comment">#用来正常显示中文标签</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span> <span class="comment">#用来正常显示负号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">ax1,ax2</span>):</span><br><span class="line">    <span class="comment"># 获得当前脚本路径</span></span><br><span class="line">    fill_color = <span class="string">&#x27;#888888&#x27;</span></span><br><span class="line">    legend_font = &#123;<span class="string">&quot;family&quot;</span> : <span class="string">&quot;Times New Roman&quot;</span>,<span class="string">&quot;size&quot;</span>: <span class="number">12</span>&#125;</span><br><span class="line">    curPath = os.path.abspath(os.path.dirname(__file__))</span><br><span class="line">    <span class="comment"># 切换路径</span></span><br><span class="line">    os.chdir(curPath)</span><br><span class="line">    <span class="comment"># 数据读入（用户自定义）</span></span><br><span class="line">    data1 = np.load(<span class="string">&#x27;data1.npy&#x27;</span>).flatten()</span><br><span class="line">    data2 = np.load(<span class="string">&#x27;data2.npy&#x27;</span>).flatten()</span><br><span class="line">    data3 = np.load(<span class="string">&#x27;data3.npy&#x27;</span>).flatten()</span><br><span class="line">    TRUE_data = np.load(<span class="string">&#x27;true.npy&#x27;</span>).flatten()</span><br><span class="line"></span><br><span class="line">    ax = [ax1,ax2]</span><br><span class="line">    <span class="comment"># ax[0].plot(GRU_data,label=&#x27;GRU&#x27;,marker=&#x27;x&#x27;,linestyle=&#x27;--&#x27;,linewidth=2,markersize=3)</span></span><br><span class="line">    ax[<span class="number">0</span>].plot(data1+<span class="number">0.11</span>,c=<span class="string">&#x27;m&#x27;</span>, label=<span class="string">&#x27;Model1&#x27;</span>,marker=<span class="string">&#x27;d&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    ax[<span class="number">0</span>].plot(data2+<span class="number">0.11</span>,c=<span class="string">&#x27;navy&#x27;</span>, label=<span class="string">&#x27;Model2&#x27;</span>,marker=<span class="string">&#x27;s&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    ax[<span class="number">0</span>].plot(data3+<span class="number">0.11</span>,c=<span class="string">&#x27;g&#x27;</span>, label=<span class="string">&#x27;Model3&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    ax[<span class="number">0</span>].plot(TRUE_data+<span class="number">0.11</span>,c=<span class="string">&#x27;red&#x27;</span>, label=<span class="string">&#x27;TRUE&#x27;</span>,linewidth=<span class="number">2</span>,marker=<span class="string">&#x27;^&#x27;</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    ax[<span class="number">0</span>].fill_between([<span class="number">25</span>,<span class="number">38</span>],<span class="number">1.4</span>,<span class="number">1.6</span>,facecolor = fill_color, alpha = <span class="number">0.8</span>)</span><br><span class="line">    fill0 = ax[<span class="number">0</span>].fill_between([<span class="number">52</span>,<span class="number">64</span>],<span class="number">1.65</span>,<span class="number">1.82</span>,facecolor = fill_color, alpha = <span class="number">0.8</span>,label=<span class="string">&#x27;Area&#x27;</span>)</span><br><span class="line">    ax[<span class="number">0</span>].xaxis.set_ticks_position(<span class="string">&#x27;both&#x27;</span>)</span><br><span class="line">    ax[<span class="number">0</span>].yaxis.set_ticks_position(<span class="string">&#x27;both&#x27;</span>)</span><br><span class="line">    ax[<span class="number">0</span>].yaxis.set_minor_locator(AutoMinorLocator(<span class="number">10</span>))</span><br><span class="line">    ax[<span class="number">0</span>].tick_params(<span class="string">&#x27;y&#x27;</span>,which=<span class="string">&#x27;minor&#x27;</span>,direction=<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line">    ax[<span class="number">0</span>].xaxis.set_minor_locator(AutoMinorLocator(<span class="number">10</span>))</span><br><span class="line">    ax[<span class="number">0</span>].tick_params(<span class="string">&#x27;x&#x27;</span>,which=<span class="string">&#x27;minor&#x27;</span>,direction=<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line">    ax[<span class="number">0</span>].tick_params(which = <span class="string">&quot;major&quot;</span>,</span><br><span class="line">               length = <span class="number">4</span>, width = <span class="number">1.8</span>,labelsize=<span class="number">10</span>)</span><br><span class="line">    ax[<span class="number">0</span>].tick_params(which = <span class="string">&quot;minor&quot;</span>,width = <span class="number">1.4</span>)</span><br><span class="line">    <span class="keyword">for</span> label <span class="keyword">in</span> ax[<span class="number">0</span>].get_yticklabels():</span><br><span class="line">        label.set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> label <span class="keyword">in</span> ax[<span class="number">0</span>].get_xticklabels():</span><br><span class="line">        label.set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    legend0 = ax[<span class="number">0</span>].legend(loc=<span class="string">&#x27;upper left&#x27;</span>,prop=legend_font, title=<span class="string">&#x27;Legend_Title&#x27;</span>)</span><br><span class="line">    legend0.get_title().set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    legend0.get_title().set_fontsize(fontsize = <span class="number">14</span>)</span><br><span class="line">    <span class="comment"># 子图</span></span><br><span class="line">    axins = inset_axes(ax[<span class="number">0</span>], width=<span class="string">&quot;50%&quot;</span>, height=<span class="string">&quot;55%&quot;</span>,bbox_to_anchor=(<span class="number">0.4</span>, -<span class="number">0.24</span>, <span class="number">0.6</span>, <span class="number">0.8</span>), bbox_transform=ax[<span class="number">0</span>].transAxes)</span><br><span class="line">    axins.set_facecolor(<span class="string">&#x27;#DDDDDD&#x27;</span>)</span><br><span class="line">    axins.plot(data1+<span class="number">0.11</span>,c=<span class="string">&#x27;m&#x27;</span>, label=<span class="string">&#x27;Model1&#x27;</span>,marker=<span class="string">&#x27;d&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    axins.plot(data2+<span class="number">0.11</span>,c=<span class="string">&#x27;navy&#x27;</span>, label=<span class="string">&#x27;Model2&#x27;</span>,marker=<span class="string">&#x27;s&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    axins.plot(data3+<span class="number">0.11</span>,c=<span class="string">&#x27;g&#x27;</span>, label=<span class="string">&#x27;Model3&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>,linewidth=<span class="number">2</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    axins.plot(TRUE_data+<span class="number">0.11</span>,c=<span class="string">&#x27;red&#x27;</span>, label=<span class="string">&#x27;TRUE&#x27;</span>,linewidth=<span class="number">2</span>,marker=<span class="string">&#x27;^&#x27;</span>,markersize=<span class="number">3</span>)</span><br><span class="line">    axins.set_xlim(<span class="number">25</span>,<span class="number">38</span>)</span><br><span class="line">    axins.set_ylim(<span class="number">1.4</span>,<span class="number">1.6</span>)</span><br><span class="line">    axins.spines[<span class="string">&#x27;top&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">    axins.spines[<span class="string">&#x27;right&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">    axins.spines[<span class="string">&#x27;left&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">    axins.spines[<span class="string">&#x27;bottom&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">    axins.tick_params(labelbottom=<span class="literal">False</span>, labelleft=<span class="literal">False</span>,bottom=<span class="literal">False</span>,left=<span class="literal">False</span>)</span><br><span class="line">    mark_inset(ax[<span class="number">0</span>], axins, loc1=<span class="number">3</span>, loc2=<span class="number">1</span>, fc=<span class="string">&quot;none&quot;</span>, ec=<span class="string">&#x27;k&#x27;</span>, lw=<span class="number">0.5</span>)</span><br><span class="line">    <span class="comment"># 设置图例标题</span></span><br><span class="line">    ax[<span class="number">0</span>].set_ylabel(<span class="string">&#x27;预测值(m)&#x27;</span>,fontweight=<span class="string">&#x27;bold&#x27;</span>,fontsize=<span class="number">15</span>)</span><br><span class="line">    ax[<span class="number">1</span>].set_ylabel(<span class="string">&#x27;残差(m)&#x27;</span>,fontweight=<span class="string">&#x27;bold&#x27;</span>,fontsize=<span class="number">15</span>)</span><br><span class="line">    title0 = ax[<span class="number">0</span>].set_title(<span class="string">&#x27;(a)&#x27;</span>,fontproperties=<span class="string">&#x27;Times New Roman&#x27;</span>, y=<span class="number">0</span>, loc=<span class="string">&#x27;right&#x27;</span>, color=<span class="string">&#x27;#550088&#x27;</span>)</span><br><span class="line">    title1 = ax[<span class="number">1</span>].set_title(<span class="string">&#x27;(b)&#x27;</span>,fontproperties=<span class="string">&#x27;Times New Roman&#x27;</span>, y=<span class="number">0</span>, loc=<span class="string">&#x27;left&#x27;</span>, color=<span class="string">&#x27;#550088&#x27;</span>)</span><br><span class="line">    title0.set_fontsize(fontsize = <span class="number">18</span>)</span><br><span class="line">    title1.set_fontsize(fontsize = <span class="number">18</span>)</span><br><span class="line">    title0.set_fontweight(<span class="string">&#x27;bold&#x27;</span>)</span><br><span class="line">    title1.set_fontweight(<span class="string">&#x27;bold&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    ax[<span class="number">1</span>].axhline(y=<span class="number">0</span>, color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].plot(TRUE_data-data1, c=<span class="string">&#x27;m&#x27;</span>, label=<span class="string">&#x27;Model1&#x27;</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">    ax[<span class="number">1</span>].plot(TRUE_data-data2, c=<span class="string">&#x27;navy&#x27;</span>, label=<span class="string">&#x27;Model2&#x27;</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">    ax[<span class="number">1</span>].plot(TRUE_data-data3, c=<span class="string">&#x27;g&#x27;</span>, label=<span class="string">&#x27;Model3&#x27;</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># 绘制y=0</span></span><br><span class="line">    <span class="comment"># 填充</span></span><br><span class="line">    ax[<span class="number">1</span>].fill_between([<span class="number">25</span>,<span class="number">38</span>],-<span class="number">0.02</span>,<span class="number">0.065</span>,facecolor = fill_color, alpha = <span class="number">0.8</span>)</span><br><span class="line">    fill1 = ax[<span class="number">1</span>].fill_between([<span class="number">52</span>,<span class="number">64</span>],-<span class="number">0.02</span>,<span class="number">0.065</span>,facecolor = fill_color, alpha=<span class="number">0.8</span>,label=<span class="string">&#x27;Area&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].xaxis.set_ticks_position(<span class="string">&#x27;both&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].yaxis.set_ticks_position(<span class="string">&#x27;both&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].yaxis.set_minor_locator(AutoMinorLocator(<span class="number">10</span>))</span><br><span class="line">    ax[<span class="number">1</span>].tick_params(<span class="string">&#x27;y&#x27;</span>,which=<span class="string">&#x27;minor&#x27;</span>,direction=<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].xaxis.set_minor_locator(AutoMinorLocator(<span class="number">10</span>))</span><br><span class="line">    ax[<span class="number">1</span>].tick_params(<span class="string">&#x27;x&#x27;</span>,which=<span class="string">&#x27;minor&#x27;</span>,direction=<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line">    ax[<span class="number">1</span>].tick_params(which = <span class="string">&quot;major&quot;</span>,</span><br><span class="line">               length = <span class="number">4</span>, width = <span class="number">1.8</span>,labelsize=<span class="number">10</span>)</span><br><span class="line">    ax[<span class="number">1</span>].tick_params(which = <span class="string">&quot;minor&quot;</span>,width = <span class="number">1.4</span>)</span><br><span class="line">    <span class="keyword">for</span> label <span class="keyword">in</span> ax[<span class="number">1</span>].get_yticklabels():</span><br><span class="line">        label.set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> label <span class="keyword">in</span> ax[<span class="number">1</span>].get_xticklabels():</span><br><span class="line">        label.set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    legend1 = ax[<span class="number">1</span>].legend(loc=<span class="string">&#x27;upper left&#x27;</span>,prop=legend_font,title=<span class="string">&#x27;Legend_Title&#x27;</span>)</span><br><span class="line">    legend1.get_title().set_fontproperties(<span class="string">&#x27;Times New Roman&#x27;</span>)</span><br><span class="line">    legend1.get_title().set_fontsize(fontsize = <span class="number">14</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ax_ <span class="keyword">in</span> [ax[<span class="number">0</span>],ax[<span class="number">1</span>]]:</span><br><span class="line">        <span class="comment"># ax_.set_facecolor(&#x27;#EEEEEE&#x27;)</span></span><br><span class="line">        ax_.spines[<span class="string">&#x27;top&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">        ax_.spines[<span class="string">&#x27;right&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">        ax_.spines[<span class="string">&#x27;left&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">        ax_.spines[<span class="string">&#x27;bottom&#x27;</span>].set_linewidth(<span class="number">1.7</span>)</span><br><span class="line">        ax_.grid(linestyle=<span class="string">&#x27;--&#x27;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">        ax_.tick_params(top=<span class="literal">True</span>,right=<span class="literal">True</span>,direction=<span class="string">&#x27;in&#x27;</span>, labelsize=<span class="number">15</span>)</span><br><span class="line">        ax_.set_xlabel(<span class="string">&#x27;时间步长&#x27;</span>,fontweight=<span class="string">&#x27;bold&#x27;</span>,fontsize=<span class="number">15</span>)</span><br><span class="line"></span><br><span class="line">    fig.tight_layout()</span><br><span class="line">    fig.savefig(<span class="string">&#x27;res.png&#x27;</span>, dpi=<span class="number">600</span>, bbox_inches=<span class="string">&#x27;tight&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> ax[<span class="number">0</span>],ax[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line">    main(ax[<span class="number">0</span>],ax[<span class="number">1</span>])</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>

<h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><img src="/2024/04/08/Line-chart-polt/res.png" class="">]]></content>
      <categories>
        <category>Python_Plot</category>
      </categories>
      <tags>
        <tag>line-chart</tag>
      </tags>
  </entry>
</search>
